// üìã –û–ü–ò–°–ê–ù–ò–ï: –•—É–∫ –¥–ª—è —Ñ–æ—Ä–º—ã —Å–ª–∞–π–¥–æ–≤
// üîß –ò–ó–ú–ï–ù–ï–ù–ò–Ø: –ó–∞–º–µ–Ω–∞ Base64 –Ω–∞ —Ä–µ–∞–ª—å–Ω—É—é –∑–∞–≥—Ä—É–∑–∫—É –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π

import { useState } from 'react';
import { uploadApi } from '@/shared/api/real'; // ‚Üê –ò–ó–ú–ï–ù–ò–¢–¨ –∏–º–ø–æ—Ä—Ç

interface SlideFormData {
  title?: string;
  description?: string;
  link?: string;
  imageUrl?: string;
  isActive?: boolean;
  order?: number;
}

export const useSlideForm = (initialData?: SlideFormData) => {
  const [formData, setFormData] = useState<SlideFormData>(initialData || {
    title: '',
    description: '',
    link: '',
    imageUrl: '',
    isActive: true,
    order: 0
  });
  
  const [uploadProgress, setUploadProgress] = useState(0);
  const [isUploading, setIsUploading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const updateField = (field: string, value: any) => {
    setFormData((prev: any) => ({ ...prev, [field]: value }));
  };

  const uploadImage = async (file: File): Promise<boolean> => {
    try {
      setIsUploading(true);
      setUploadProgress(0);
      setError(null);

      // üéØ –†–ï–ê–õ–¨–ù–ê–Ø –ó–ê–ì–†–£–ó–ö–ê –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
      const response = await uploadApi.uploadFile(file, 'image', (progress) => {
        setUploadProgress(progress);
      });

      updateField('imageUrl', response.url);
      setIsUploading(false);
      return true;
      
    } catch (err: any) {
      setError(err.response?.data?.message || '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è');
      setIsUploading(false);
      return false;
    }
  };

  const removeImage = async (): Promise<void> => {
    if (formData.imageUrl) {
      try {
        await uploadApi.deleteFile(formData.imageUrl);
      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:', err);
      }
    }
    updateField('imageUrl', '');
    setError(null);
  };

  return {
    formData,
    uploadProgress,
    isUploading,
    error,
    updateField,
    uploadImage,
    removeImage,
    setFormData
  };
};